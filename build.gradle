/*
 * Copyright (c) 2016 EMC Corporation. All Rights Reserved.
 *
 * Licensed under the EMC Software License Agreement for Free Software (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 * https://github.com/EMCECS/ecs-alfresco-content-store/blob/master/LICENSE.txt
 */
description = 'Alfresco ECS Content Source - lets an Alfresco Repository instance use ECS as a back-end content store. http://docs.alfresco.com/5.1/references/dev-extension-points-custom-content-store.html'
group = 'com.emc.ecs'
version = '1.0-rc1'

ext.githubProjectName = 'ecs-alfresco-content-store'
ext.licenseName = 'EMC Software License Agreement - Free Software'
ext.licenseUrl = 'https://raw.githubusercontent.com/EMCECS/ecs-alfresco-content-store/master/LICENSE.txt'

buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'maven'

configurations {
    jars.extendsFrom(signatures)
    export // specifies additional artifacts in the root distribution
}

task buildAmp(type: Exec) {
    workingDir '.'
    commandLine './compile.sh'
}

task cleanAmp(type: Exec) {
    workingDir '.'
    commandLine './clean.sh'
}

defaultTasks 'distZip'

distZip.dependsOn buildAmp

clean.dependsOn cleanAmp

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    jars sourcesJar
}

repositories {
    jcenter { url 'http://jcenter.bintray.com/' }
}

dependencies {
}

def projectPom = {
    project {
        name project.name
        description project.description
        url 'https://community.emc.com/community/products/ecs#developer'

        scm {
            url scmUrl
            connection scmConnection
            developerConnection scmConnection
        }

        licenses {
            license {
                name licenseName
                url licenseUrl
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'EMCECS'
                name 'EMC ECS'
            }
        }
    }
}

task writePom {
    ext.pomFile = file("$buildDir/pom.xml")
    outputs.file pomFile
    doLast {
        pom(projectPom).writeTo pomFile
    }
}

jar {
    doFirst {
        manifest {
            attributes 'Implementation-Version': project.version,
                    'Class-Path': configurations.runtime.collect { it.getName() }.join(' ')
        }
    }
    into("META-INF/maven/$project.group/$project.name") {
        from writePom
    }
}

distributions {
    main {
        contents {
            from configurations.jars.artifacts.files
            from configurations.export.artifacts.files
            from('.') {
                include '*.txt'
            }
            from('target') {
                include '*.amp'
            }
            into('3rd-party-licenses') {
                from '3rd-party-licenses'
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}
